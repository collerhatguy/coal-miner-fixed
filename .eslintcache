[{"/Users/jacobshomali/Documents/GitHub/coal-miner-fixed/src/index.js":"1","/Users/jacobshomali/Documents/GitHub/coal-miner-fixed/src/App.js":"2","/Users/jacobshomali/Documents/GitHub/coal-miner-fixed/src/components/WorkerList.js":"3","/Users/jacobshomali/Documents/GitHub/coal-miner-fixed/src/components/Worker.js":"4","/Users/jacobshomali/Documents/GitHub/coal-miner-fixed/src/misc.js":"5","/Users/jacobshomali/Documents/GitHub/coal-miner-fixed/src/components/Multiplier.js":"6","/Users/jacobshomali/Documents/GitHub/coal-miner-fixed/src/components/MultiplierList.js":"7","/Users/jacobshomali/Documents/GitHub/coal-miner-fixed/src/hooks/useVisible.js":"8","/Users/jacobshomali/Documents/GitHub/coal-miner-fixed/src/hooks/useWorker.js":"9"},{"size":197,"mtime":1618529388000,"results":"10","hashOfConfig":"11"},{"size":811,"mtime":1620224689000,"results":"12","hashOfConfig":"11"},{"size":578,"mtime":1620224689000,"results":"13","hashOfConfig":"11"},{"size":1520,"mtime":1621052095000,"results":"14","hashOfConfig":"11"},{"size":1963,"mtime":1621052029000,"results":"15","hashOfConfig":"11"},{"size":416,"mtime":1620224689000,"results":"16","hashOfConfig":"11"},{"size":557,"mtime":1620224689000,"results":"17","hashOfConfig":"11"},{"size":518,"mtime":1621052069000,"results":"18","hashOfConfig":"11"},{"size":1597,"mtime":1621052029000,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"7tgfm0",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},"/Users/jacobshomali/Documents/GitHub/coal-miner-fixed/src/index.js",[],["41","42"],"/Users/jacobshomali/Documents/GitHub/coal-miner-fixed/src/App.js",["43"],"import React, { useEffect, useState, useMemo } from \"react\";\nimport WorkerList from \"./components/WorkerList\"\n\nimport \"./css/App.css\";\nimport MultiplierList from \"./components/MultiplierList\";\n\nfunction App() {\n  // set everything back to default values based on local save\n  const [money, setMoney] = useState(10\n    // JSON.parse(localStorage.getItem(\"CoalMiner.money\")) || 10\n  );\n  const [multiplier, setMultiplier] = useState(1);\n  // for saving money\n  useEffect(() => {\n    localStorage.setItem(\"CoalMiner.money\", JSON.stringify(money))\n  }, [money])\n\n  return (\n    <>\n      <h1>Coal Miners</h1>\n      <h2>Current Money: {money}</h2>\n      <WorkerList money={money} setMoney={setMoney} multiplier={multiplier} />\n      <MultiplierList setMultiplier={setMultiplier} />\n    </>\n  );\n}\n\nexport default App;","/Users/jacobshomali/Documents/GitHub/coal-miner-fixed/src/components/WorkerList.js",[],"/Users/jacobshomali/Documents/GitHub/coal-miner-fixed/src/components/Worker.js",["44"],"/Users/jacobshomali/Documents/GitHub/coal-miner-fixed/src/misc.js",[],"/Users/jacobshomali/Documents/GitHub/coal-miner-fixed/src/components/Multiplier.js",[],"/Users/jacobshomali/Documents/GitHub/coal-miner-fixed/src/components/MultiplierList.js",[],"/Users/jacobshomali/Documents/GitHub/coal-miner-fixed/src/hooks/useVisible.js",[],"/Users/jacobshomali/Documents/GitHub/coal-miner-fixed/src/hooks/useWorker.js",["45","46","47","48","49","50"],"import { useReducer, useEffect, useState, useCallback } from \"react\";\n\nconst ACTIONS = {\n    Upgrade: \"UpgradeWorker\",\n    Buy: \"BuyWorker\",\n    Mining: \"MiningWorker\",\n}\nfunction reducer(state, action) {\n    switch(action.type) {\n        case ACTIONS.Upgrade:\n            return {\n                ...state,\n                productionRate: state.productionRate + 1, \n                productionRateUpgradeCost: state.productionRateUpgradeCost * 2, \n            }\n        case ACTIONS.Buy:\n            return {\n                ...state,\n                owned: state.owned + action.payload,\n                cost: state.cost + action.payload, \n            }\n        default: return state;\n    }\n}\nexport default function useWorker(worker, setMoney, money, multiplier) {\n    const [state, dispatch] = useReducer(reducer, worker);\n    const [progress, setProgress] = useState(0);\n    const miningSpeed = 3000;\n    const loadingRate = 20;\n\n    const BuyWorker = useCallback(() => {\n        const totalCost = state.cost * multiplier;\n        if (money < totalCost) return;\n        setMoney(prevMoney => prevMoney - totalCost);\n        dispatch({type: ACTIONS.Buy, payload: multiplier})\n    }, [state, multiplier, money])\n\n    const UpgradeWorker = useCallback(() => {\n        if (money < state.productionRateUpgradeCost) return;\n        setMoney(prevMoney => prevMoney - state.productionRateUpgradeCost);\n        dispatch({type: ACTIONS.Upgrade})\n    }, [state, money])\n\n    useEffect(() => {\n        const mining = setInterval(() => {\n            setMoney(prevMoney => prevMoney + (state.owned * state.productionRate));\n        }, miningSpeed)\n    }, [state])\n    useEffect(() => {\n        const progressSetting = setInterval(() => {\n            \n            progress >= 100 ? setProgress(1) : setProgress(prevProgress => prevProgress + (100 / loadingRate));\n        }, (miningSpeed / loadingRate))\n    }, [])\n    return [state, BuyWorker, UpgradeWorker, progress];\n}",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":1,"column":38,"nodeType":"57","messageId":"58","endLine":1,"endColumn":45},{"ruleId":"59","severity":1,"message":"60","line":12,"column":8,"nodeType":"61","endLine":12,"endColumn":15,"suggestions":"62"},{"ruleId":"59","severity":1,"message":"63","line":36,"column":8,"nodeType":"61","endLine":36,"endColumn":34,"suggestions":"64"},{"ruleId":"59","severity":1,"message":"63","line":42,"column":8,"nodeType":"61","endLine":42,"endColumn":22,"suggestions":"65"},{"ruleId":"55","severity":1,"message":"66","line":45,"column":15,"nodeType":"57","messageId":"58","endLine":45,"endColumn":21},{"ruleId":"59","severity":1,"message":"67","line":48,"column":8,"nodeType":"61","endLine":48,"endColumn":15,"suggestions":"68"},{"ruleId":"55","severity":1,"message":"69","line":50,"column":15,"nodeType":"57","messageId":"58","endLine":50,"endColumn":30},{"ruleId":"59","severity":1,"message":"70","line":54,"column":8,"nodeType":"61","endLine":54,"endColumn":10,"suggestions":"71"},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'useMemo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'worker.cost'. Either include it or remove the dependency array.","ArrayExpression",["74"],"React Hook useCallback has a missing dependency: 'setMoney'. Either include it or remove the dependency array. If 'setMoney' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["75"],["76"],"'mining' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setMoney'. Either include it or remove the dependency array. If 'setMoney' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["77"],"'progressSetting' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'progress'. Either include it or remove the dependency array.",["78"],"no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},{"desc":"81","fix":"82"},{"desc":"83","fix":"84"},{"desc":"85","fix":"86"},{"desc":"87","fix":"88"},"Update the dependencies array to be: [money, worker.cost]",{"range":"89","text":"90"},"Update the dependencies array to be: [state.cost, multiplier, money, setMoney]",{"range":"91","text":"92"},"Update the dependencies array to be: [money, state.productionRateUpgradeCost, setMoney]",{"range":"93","text":"94"},"Update the dependencies array to be: [setMoney, state]",{"range":"95","text":"96"},"Update the dependencies array to be: [progress]",{"range":"97","text":"98"},[517,524],"[money, worker.cost]",[1185,1211],"[state.cost, multiplier, money, setMoney]",[1446,1460],"[money, state.productionRateUpgradeCost, setMoney]",[1644,1651],"[setMoney, state]",[1899,1901],"[progress]"]