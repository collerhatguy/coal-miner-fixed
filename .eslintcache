[{"/Users/jacobshomali/Desktop/projects/coal-miner-fixed/src/index.js":"1","/Users/jacobshomali/Desktop/projects/coal-miner-fixed/src/App.js":"2","/Users/jacobshomali/Desktop/projects/coal-miner-fixed/src/components/MultiplierList.js":"3","/Users/jacobshomali/Desktop/projects/coal-miner-fixed/src/components/WorkerList.js":"4","/Users/jacobshomali/Desktop/projects/coal-miner-fixed/src/components/Multiplier.js":"5","/Users/jacobshomali/Desktop/projects/coal-miner-fixed/src/components/Worker.js":"6","/Users/jacobshomali/Desktop/projects/coal-miner-fixed/src/misc.js":"7","/Users/jacobshomali/Desktop/projects/coal-miner-fixed/src/hooks/useVisible.js":"8","/Users/jacobshomali/Desktop/projects/coal-miner-fixed/src/hooks/useWorker.js":"9"},{"size":197,"mtime":1626813458000,"results":"10","hashOfConfig":"11"},{"size":727,"mtime":1626985245000,"results":"12","hashOfConfig":"11"},{"size":565,"mtime":1626813490000,"results":"13","hashOfConfig":"11"},{"size":529,"mtime":1626813867000,"results":"14","hashOfConfig":"11"},{"size":466,"mtime":1626985983000,"results":"15","hashOfConfig":"11"},{"size":1749,"mtime":1626991500000,"results":"16","hashOfConfig":"11"},{"size":2585,"mtime":1626813490000,"results":"17","hashOfConfig":"11"},{"size":518,"mtime":1624562537000,"results":"18","hashOfConfig":"11"},{"size":2488,"mtime":1626813490000,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"14ykkio",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},"/Users/jacobshomali/Desktop/projects/coal-miner-fixed/src/index.js",[],["41","42"],"/Users/jacobshomali/Desktop/projects/coal-miner-fixed/src/App.js",[],"/Users/jacobshomali/Desktop/projects/coal-miner-fixed/src/components/MultiplierList.js",[],"/Users/jacobshomali/Desktop/projects/coal-miner-fixed/src/components/WorkerList.js",[],"/Users/jacobshomali/Desktop/projects/coal-miner-fixed/src/components/Multiplier.js",[],"/Users/jacobshomali/Desktop/projects/coal-miner-fixed/src/components/Worker.js",["43","44"],"/Users/jacobshomali/Desktop/projects/coal-miner-fixed/src/misc.js",[],"/Users/jacobshomali/Desktop/projects/coal-miner-fixed/src/hooks/useVisible.js",[],["45","46"],"/Users/jacobshomali/Desktop/projects/coal-miner-fixed/src/hooks/useWorker.js",["47","48","49","50","51"],"import { useReducer, useEffect, useCallback, useState } from \"react\";\n\nconst ACTIONS = {\n    Upgrade: \"UpgradeWorker\",\n    Buy: \"BuyWorker\",\n    Mining: \"MiningWorker\",\n}\nfunction reducer(state, action) {\n    switch(action.type) {\n        case ACTIONS.Upgrade:\n            return {\n                ...state,\n                productionRate: state.productionRate + 1, \n                productionRateUpgradeCost: state.productionRateUpgradeCost * 2,\n                level: state.level + 1, \n            }\n        case ACTIONS.Buy:\n            return {\n                ...state,\n                owned: state.owned + action.payload,\n                cost: state.cost + action.payload, \n            }\n        default: return state;\n    }\n}\nexport default function useWorker(worker, setMoney, money, multiplier) {\n    const [state, dispatch] = useReducer(reducer, worker);\n    const progressSpeed = 50;\n    const [miningTrigger, setMiningTrigger] = useState(0);\n    const [progressTrigger, setProgressTrigger] = useState(0);\n    const [goldMined, setGoldMined] = useState(worker.owned * worker.productionRate);\n    const [lastMinedTime, setLastMinedTime] = useState(Date.now());\n    const [progress, setProgress] = useState(0);\n\n    const BuyWorker = useCallback(() => {\n        const totalCost = state.cost * multiplier;\n        if (money < totalCost) return;\n        setMoney(prevMoney => prevMoney - totalCost);\n        dispatch({type: ACTIONS.Buy, payload: multiplier})\n    }, [state, multiplier, money])\n\n    const UpgradeWorker = useCallback(() => {\n        if (money < state.productionRateUpgradeCost) return;\n        setMoney(prevMoney => prevMoney - state.productionRateUpgradeCost);\n        dispatch({type: ACTIONS.Upgrade})\n    }, [state, money])\n\n    useEffect(() => {\n        setInterval(() => {\n            setMiningTrigger(prevMining => prevMining + 1)\n        }, state.speed)\n        setInterval(() => {\n            setProgressTrigger(prevProgress => prevProgress + 1)\n        }, progressSpeed)\n    }, []);\n\n    useEffect(() => {\n        setMoney(prevMoney => prevMoney + goldMined);\n        setLastMinedTime(Date.now());\n    }, [miningTrigger]);\n\n    useEffect(() => {\n        if (state.owned === 0) return;\n        setProgress(Math.floor(((Date.now() - lastMinedTime) / state.speed) * 100));\n    }, [progressTrigger])\n\n    useEffect(() => {\n        setGoldMined(state.owned * state.productionRate);\n    }, [state]);\n    \n    return [state, progress, BuyWorker, UpgradeWorker];\n}",{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":11,"column":8,"nodeType":"58","endLine":11,"endColumn":15,"suggestions":"59"},{"ruleId":"60","severity":1,"message":"61","line":24,"column":17,"nodeType":"62","endLine":25,"endColumn":45},{"ruleId":"52","replacedBy":"63"},{"ruleId":"54","replacedBy":"64"},{"ruleId":"56","severity":1,"message":"65","line":40,"column":8,"nodeType":"58","endLine":40,"endColumn":34,"suggestions":"66"},{"ruleId":"56","severity":1,"message":"65","line":46,"column":8,"nodeType":"58","endLine":46,"endColumn":22,"suggestions":"67"},{"ruleId":"56","severity":1,"message":"68","line":55,"column":8,"nodeType":"58","endLine":55,"endColumn":10,"suggestions":"69"},{"ruleId":"56","severity":1,"message":"70","line":60,"column":8,"nodeType":"58","endLine":60,"endColumn":23,"suggestions":"71"},{"ruleId":"56","severity":1,"message":"72","line":65,"column":8,"nodeType":"58","endLine":65,"endColumn":25,"suggestions":"73"},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'worker.cost'. Either include it or remove the dependency array.","ArrayExpression",["76"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["74"],["75"],"React Hook useCallback has a missing dependency: 'setMoney'. Either include it or remove the dependency array. If 'setMoney' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["77"],["78"],"React Hook useEffect has a missing dependency: 'state.speed'. Either include it or remove the dependency array.",["79"],"React Hook useEffect has missing dependencies: 'goldMined' and 'setMoney'. Either include them or remove the dependency array. If 'setMoney' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["80"],"React Hook useEffect has missing dependencies: 'lastMinedTime', 'state.owned', and 'state.speed'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setProgress' needs the current value of 'lastMinedTime'.",["81"],"no-global-assign","no-unsafe-negation",{"desc":"82","fix":"83"},{"desc":"84","fix":"85"},{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},{"desc":"90","fix":"91"},{"desc":"92","fix":"93"},"Update the dependencies array to be: [money, worker.cost]",{"range":"94","text":"95"},"Update the dependencies array to be: [state.cost, multiplier, money, setMoney]",{"range":"96","text":"97"},"Update the dependencies array to be: [money, state.productionRateUpgradeCost, setMoney]",{"range":"98","text":"99"},"Update the dependencies array to be: [state.speed]",{"range":"100","text":"101"},"Update the dependencies array to be: [goldMined, miningTrigger, setMoney]",{"range":"102","text":"103"},"Update the dependencies array to be: [lastMinedTime, progressTrigger, state.owned, state.speed]",{"range":"104","text":"105"},[468,475],"[money, worker.cost]",[1473,1499],"[state.cost, multiplier, money, setMoney]",[1734,1748],"[money, state.productionRateUpgradeCost, setMoney]",[2010,2012],"[state.speed]",[2137,2152],"[goldMined, miningTrigger, setMoney]",[2309,2326],"[lastMinedTime, progressTrigger, state.owned, state.speed]"]