[{"/Users/jacobshomali/Desktop/projects/coal-miner-fixed/src/index.js":"1","/Users/jacobshomali/Desktop/projects/coal-miner-fixed/src/App.js":"2","/Users/jacobshomali/Desktop/projects/coal-miner-fixed/src/components/MultiplierList.js":"3","/Users/jacobshomali/Desktop/projects/coal-miner-fixed/src/components/WorkerList.js":"4","/Users/jacobshomali/Desktop/projects/coal-miner-fixed/src/components/Multiplier.js":"5","/Users/jacobshomali/Desktop/projects/coal-miner-fixed/src/components/Worker.js":"6","/Users/jacobshomali/Desktop/projects/coal-miner-fixed/src/misc.js":"7","/Users/jacobshomali/Desktop/projects/coal-miner-fixed/src/hooks/useWorker.js":"8"},{"size":196,"mtime":1627081558000,"results":"9","hashOfConfig":"10"},{"size":886,"mtime":1627082624000,"results":"11","hashOfConfig":"10"},{"size":565,"mtime":1627082709000,"results":"12","hashOfConfig":"10"},{"size":522,"mtime":1627082654000,"results":"13","hashOfConfig":"10"},{"size":466,"mtime":1626985983000,"results":"14","hashOfConfig":"10"},{"size":1761,"mtime":1627085238000,"results":"15","hashOfConfig":"10"},{"size":2585,"mtime":1626813490000,"results":"16","hashOfConfig":"10"},{"size":2617,"mtime":1627085589000,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"14ykkio",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jacobshomali/Desktop/projects/coal-miner-fixed/src/index.js",[],["36","37"],"/Users/jacobshomali/Desktop/projects/coal-miner-fixed/src/App.js",[],"/Users/jacobshomali/Desktop/projects/coal-miner-fixed/src/components/MultiplierList.js",[],"/Users/jacobshomali/Desktop/projects/coal-miner-fixed/src/components/WorkerList.js",[],"/Users/jacobshomali/Desktop/projects/coal-miner-fixed/src/components/Multiplier.js",[],"/Users/jacobshomali/Desktop/projects/coal-miner-fixed/src/components/Worker.js",["38","39"],"import React, {useState, useEffect} from 'react';\nimport useWorker from \"../hooks/useWorker\";\n\n\nexport default function Worker({worker, money, setMoney, multiplier}) {\n    const [workerState, progress, BuyWorker, UpgradeWorker] = useWorker(worker, setMoney, money, multiplier);\n    const [affordable, setAffordable] = useState(false)\n    const [visible, setVisible] = useState(true)\n    useEffect(() => {\n        if (worker.cost <= money) setAffordable(true); \n    }, [money])\n    const buy = e => {\n        e.stopPropagation()\n        BuyWorker()\n    }\n    const upgrade = e => {\n        e.stopPropagation()\n        UpgradeWorker()\n    }\n    if (!affordable) return null;\n    return (\n        <div \n            className=\"worker\"\n            onClick={() => setVisible(!visible)}\n            data-cy=\"visibility-btn\">\n            <h3 className=\"worker-name\">{workerState.name}</h3>\n            {visible ? <div data-cy=\"visibility-pnl\" className=\"visible\">\n                <progress data-cy=\"progress\" max={100} value={progress} />\n                <button \n                    data-cy=\"buy\" \n                    onClick={buy}\n                >Buy <span>{multiplier}</span> for <span>{workerState.cost * multiplier}</span>$?</button>\n                <button \n                    onClick={upgrade}\n                >Upgrade for <span>{workerState.productionRateUpgradeCost}</span>$?</button>\n                <img className=\"worker-image\" \n                    src={workerState.img} />\n                <h4>Owned: <span data-cy=\"owned\">{workerState.owned}</span></h4>\n                <h4>Production Rate: <span>{workerState.productionRate}</span>$</h4>\n                <h4>Level: <span>{workerState.level}</span></h4>\n            </div> : null}\n        </div>\n    )\n}\n","/Users/jacobshomali/Desktop/projects/coal-miner-fixed/src/misc.js",[],"/Users/jacobshomali/Desktop/projects/coal-miner-fixed/src/hooks/useWorker.js",["40","41","42","43","44"],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":11,"column":8,"nodeType":"51","endLine":11,"endColumn":15,"suggestions":"52"},{"ruleId":"53","severity":1,"message":"54","line":36,"column":17,"nodeType":"55","endLine":37,"endColumn":45},{"ruleId":"49","severity":1,"message":"56","line":34,"column":8,"nodeType":"51","endLine":34,"endColumn":34,"suggestions":"57"},{"ruleId":"49","severity":1,"message":"56","line":40,"column":8,"nodeType":"51","endLine":40,"endColumn":22,"suggestions":"58"},{"ruleId":"49","severity":1,"message":"59","line":57,"column":8,"nodeType":"51","endLine":57,"endColumn":10,"suggestions":"60"},{"ruleId":"49","severity":1,"message":"61","line":63,"column":8,"nodeType":"51","endLine":63,"endColumn":23,"suggestions":"62"},{"ruleId":"49","severity":1,"message":"63","line":69,"column":8,"nodeType":"51","endLine":69,"endColumn":25,"suggestions":"64"},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'worker.cost'. Either include it or remove the dependency array.","ArrayExpression",["67"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useCallback has a missing dependency: 'setMoney'. Either include it or remove the dependency array. If 'setMoney' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["68"],["69"],"React Hook useEffect has a missing dependency: 'state.speed'. Either include it or remove the dependency array.",["70"],"React Hook useEffect has missing dependencies: 'setMoney', 'state.owned', and 'state.productionRate'. Either include them or remove the dependency array. If 'setMoney' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["71"],"React Hook useEffect has missing dependencies: 'lastMinedTime', 'state.owned', and 'state.speed'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setProgress' needs the current value of 'lastMinedTime'.",["72"],"no-global-assign","no-unsafe-negation",{"desc":"73","fix":"74"},{"desc":"75","fix":"76"},{"desc":"77","fix":"78"},{"desc":"79","fix":"80"},{"desc":"81","fix":"82"},{"desc":"83","fix":"84"},"Update the dependencies array to be: [money, worker.cost]",{"range":"85","text":"86"},"Update the dependencies array to be: [state.cost, multiplier, money, setMoney]",{"range":"87","text":"88"},"Update the dependencies array to be: [money, state.productionRateUpgradeCost, setMoney]",{"range":"89","text":"90"},"Update the dependencies array to be: [state.speed]",{"range":"91","text":"92"},"Update the dependencies array to be: [miningTrigger, setMoney, state.owned, state.productionRate]",{"range":"93","text":"94"},"Update the dependencies array to be: [lastMinedTime, progressTrigger, state.owned, state.speed]",{"range":"95","text":"96"},[468,475],"[money, worker.cost]",[1122,1148],"[state.cost, multiplier, money, setMoney]",[1387,1401],"[money, state.productionRateUpgradeCost, setMoney]",[2092,2094],"[state.speed]",[2289,2304],"[miningTrigger, setMoney, state.owned, state.productionRate]",[2535,2552],"[lastMinedTime, progressTrigger, state.owned, state.speed]"]