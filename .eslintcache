[{"/Users/jacobshomali/Desktop/projects/coal-miner-fixed/src/index.js":"1","/Users/jacobshomali/Desktop/projects/coal-miner-fixed/src/App.js":"2","/Users/jacobshomali/Desktop/projects/coal-miner-fixed/src/components/MultiplierList.js":"3","/Users/jacobshomali/Desktop/projects/coal-miner-fixed/src/components/WorkerList.js":"4","/Users/jacobshomali/Desktop/projects/coal-miner-fixed/src/components/Multiplier.js":"5","/Users/jacobshomali/Desktop/projects/coal-miner-fixed/src/components/Worker.js":"6","/Users/jacobshomali/Desktop/projects/coal-miner-fixed/src/misc.js":"7","/Users/jacobshomali/Desktop/projects/coal-miner-fixed/src/hooks/useWorker.js":"8"},{"size":196,"mtime":1627081558000,"results":"9","hashOfConfig":"10"},{"size":886,"mtime":1627082624000,"results":"11","hashOfConfig":"10"},{"size":565,"mtime":1627082709000,"results":"12","hashOfConfig":"10"},{"size":522,"mtime":1627082654000,"results":"13","hashOfConfig":"10"},{"size":466,"mtime":1626985983000,"results":"14","hashOfConfig":"10"},{"size":1765,"mtime":1627082453000,"results":"15","hashOfConfig":"10"},{"size":2585,"mtime":1626813490000,"results":"16","hashOfConfig":"10"},{"size":2499,"mtime":1627080780000,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"14ykkio",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},"/Users/jacobshomali/Desktop/projects/coal-miner-fixed/src/index.js",[],["36","37"],"/Users/jacobshomali/Desktop/projects/coal-miner-fixed/src/App.js",[],"/Users/jacobshomali/Desktop/projects/coal-miner-fixed/src/components/MultiplierList.js",[],"/Users/jacobshomali/Desktop/projects/coal-miner-fixed/src/components/WorkerList.js",[],"/Users/jacobshomali/Desktop/projects/coal-miner-fixed/src/components/Multiplier.js",[],"/Users/jacobshomali/Desktop/projects/coal-miner-fixed/src/components/Worker.js",["38","39"],"/Users/jacobshomali/Desktop/projects/coal-miner-fixed/src/misc.js",[],"/Users/jacobshomali/Desktop/projects/coal-miner-fixed/src/hooks/useWorker.js",["40","41","42","43","44"],"import { useReducer, useEffect, useCallback, useState } from \"react\";\n\nconst ACTIONS = {\n    Upgrade: \"UpgradeWorker\",\n    Buy: \"BuyWorker\",\n    Mining: \"MiningWorker\",\n}\nfunction reducer(state, action) {\n    switch(action.type) {\n        case ACTIONS.Upgrade:\n            return {\n                ...state,\n                productionRate: state.productionRate + 1, \n                productionRateUpgradeCost: state.productionRateUpgradeCost * 2,\n                level: state.level + 1, \n            }\n        case ACTIONS.Buy:\n            return {\n                ...state,\n                owned: state.owned + action.payload,\n                cost: state.cost + action.payload, \n            }\n        default: return state;\n    }\n}\nexport default function useWorker(worker, setMoney, money, multiplier) {\n    const [state, dispatch] = useReducer(reducer, worker);\n    const [lastMinedTime, setLastMinedTime] = useState(Date.now());\n    const [progress, setProgress] = useState(0);\n    \n    const BuyWorker = useCallback(() => {\n        const totalCost = state.cost * multiplier;\n        if (money < totalCost) return;\n        setMoney(prevMoney => prevMoney - totalCost);\n        dispatch({type: ACTIONS.Buy, payload: multiplier})\n    }, [state, multiplier, money])\n    \n    const UpgradeWorker = useCallback(() => {\n        if (money < state.productionRateUpgradeCost) return;\n        setMoney(prevMoney => prevMoney - state.productionRateUpgradeCost);\n        dispatch({type: ACTIONS.Upgrade})\n    }, [state, money])\n    \n    const [miningTrigger, setMiningTrigger] = useState(0);\n    const [progressTrigger, setProgressTrigger] = useState(0);\n    useEffect(() => {\n        // set up the triggers for useEffect mining\n        // has to be done this whay b/c state doesnt update withen a set timmeout function\n        setInterval(() => {\n            setMiningTrigger(prevMining => prevMining + 1)\n        }, state.speed)\n        \n        const progressSpeed = 100;\n        setInterval(() => {\n            setProgressTrigger(prevProgress => prevProgress + 1)\n        }, progressSpeed)\n    }, []);\n\n    useEffect(() => {\n        setMoney(prevMoney => prevMoney + state.owned * state.productionRate);\n        setLastMinedTime(Date.now());\n    }, [miningTrigger]);\n\n    useEffect(() => {\n        if (state.owned === 0) return;\n        setProgress(Math.floor(((Date.now() - lastMinedTime) / state.speed) * 100));\n    }, [progressTrigger])\n\n    \n    return [state, progress, BuyWorker, UpgradeWorker];\n}",{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":11,"column":8,"nodeType":"51","endLine":11,"endColumn":15,"suggestions":"52"},{"ruleId":"53","severity":1,"message":"54","line":35,"column":17,"nodeType":"55","endLine":36,"endColumn":45},{"ruleId":"49","severity":1,"message":"56","line":36,"column":8,"nodeType":"51","endLine":36,"endColumn":34,"suggestions":"57"},{"ruleId":"49","severity":1,"message":"56","line":42,"column":8,"nodeType":"51","endLine":42,"endColumn":22,"suggestions":"58"},{"ruleId":"49","severity":1,"message":"59","line":57,"column":8,"nodeType":"51","endLine":57,"endColumn":10,"suggestions":"60"},{"ruleId":"49","severity":1,"message":"61","line":62,"column":8,"nodeType":"51","endLine":62,"endColumn":23,"suggestions":"62"},{"ruleId":"49","severity":1,"message":"63","line":67,"column":8,"nodeType":"51","endLine":67,"endColumn":25,"suggestions":"64"},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'worker.cost'. Either include it or remove the dependency array.","ArrayExpression",["67"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useCallback has a missing dependency: 'setMoney'. Either include it or remove the dependency array. If 'setMoney' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["68"],["69"],"React Hook useEffect has a missing dependency: 'state.speed'. Either include it or remove the dependency array.",["70"],"React Hook useEffect has missing dependencies: 'setMoney', 'state.owned', and 'state.productionRate'. Either include them or remove the dependency array. If 'setMoney' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["71"],"React Hook useEffect has missing dependencies: 'lastMinedTime', 'state.owned', and 'state.speed'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setProgress' needs the current value of 'lastMinedTime'.",["72"],"no-global-assign","no-unsafe-negation",{"desc":"73","fix":"74"},{"desc":"75","fix":"76"},{"desc":"77","fix":"78"},{"desc":"79","fix":"80"},{"desc":"81","fix":"82"},{"desc":"83","fix":"84"},"Update the dependencies array to be: [money, worker.cost]",{"range":"85","text":"86"},"Update the dependencies array to be: [state.cost, multiplier, money, setMoney]",{"range":"87","text":"88"},"Update the dependencies array to be: [money, state.productionRateUpgradeCost, setMoney]",{"range":"89","text":"90"},"Update the dependencies array to be: [state.speed]",{"range":"91","text":"92"},"Update the dependencies array to be: [miningTrigger, setMoney, state.owned, state.productionRate]",{"range":"93","text":"94"},"Update the dependencies array to be: [lastMinedTime, progressTrigger, state.owned, state.speed]",{"range":"95","text":"96"},[468,475],"[money, worker.cost]",[1239,1265],"[state.cost, multiplier, money, setMoney]",[1504,1518],"[money, state.productionRateUpgradeCost, setMoney]",[2092,2094],"[state.speed]",[2244,2259],"[miningTrigger, setMoney, state.owned, state.productionRate]",[2416,2433],"[lastMinedTime, progressTrigger, state.owned, state.speed]"]