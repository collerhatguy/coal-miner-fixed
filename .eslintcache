[{"/Users/jacobshomali/Documents/GitHub/coal-miner-fixed/src/index.js":"1","/Users/jacobshomali/Documents/GitHub/coal-miner-fixed/src/App.js":"2","/Users/jacobshomali/Documents/GitHub/coal-miner-fixed/src/components/WorkerList.js":"3","/Users/jacobshomali/Documents/GitHub/coal-miner-fixed/src/components/Multiplier.js":"4","/Users/jacobshomali/Documents/GitHub/coal-miner-fixed/src/components/Worker.js":"5","/Users/jacobshomali/Documents/GitHub/coal-miner-fixed/src/hooks/useWorker.js":"6","/Users/jacobshomali/Documents/GitHub/coal-miner-fixed/src/misc.js":"7"},{"size":197,"mtime":1610581010000,"results":"8","hashOfConfig":"9"},{"size":834,"mtime":1618064659000,"results":"10","hashOfConfig":"9"},{"size":384,"mtime":1618064659000,"results":"11","hashOfConfig":"9"},{"size":1098,"mtime":1618062889000,"results":"12","hashOfConfig":"9"},{"size":2388,"mtime":1618154952000,"results":"13","hashOfConfig":"9"},{"size":710,"mtime":1618064022000,"results":"14","hashOfConfig":"9"},{"size":1572,"mtime":1618074472000,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"7tgfm0",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/jacobshomali/Documents/GitHub/coal-miner-fixed/src/index.js",[],["33","34"],"/Users/jacobshomali/Documents/GitHub/coal-miner-fixed/src/App.js",[],"/Users/jacobshomali/Documents/GitHub/coal-miner-fixed/src/components/WorkerList.js",[],"/Users/jacobshomali/Documents/GitHub/coal-miner-fixed/src/components/Multiplier.js",[],"/Users/jacobshomali/Documents/GitHub/coal-miner-fixed/src/components/Worker.js",["35"],"import React, {useEffect, useState} from 'react';\nimport useWorker from \"../hooks/useWorker\";\n\nexport default function Worker({worker, money, setMoney, multiplier}) {\n    const miningSpeed = 10000;\n    const [visible, setVisible] = useState(true);\n    const [ \n        owned, setOwned, \n        cost, setCost, \n        productionRate, setProductionRate, \n        productionRateUpgradeCost, setProductionRateUpgradeCost] = useWorker(worker)\n    const buyWorker = () => {\n        // check if there is enough money\n        const totalCost = cost * multiplier;\n        if (money < totalCost) return;\n        // if there is subtract from funds\n        setMoney(prevMoney => prevMoney - totalCost);\n        // adjust the stats accoringly\n        setOwned(prevOwned => prevOwned + multiplier);\n        setCost(prevCost => prevCost + multiplier);\n    };\n    // upgrade the workers production rate\n    const upgradeWorker = () => {\n        if (productionRateUpgradeCost > money) return;\n        setMoney(prevMoney => prevMoney - productionRateUpgradeCost);\n        setProductionRate(prevProductionRate => prevProductionRate + 1);\n        setProductionRateUpgradeCost(prevProductionRateUpgradeCost => prevProductionRateUpgradeCost * 2);\n    };\n    // the functoin for whenever our worker mines\n    const miningWorker = () => {\n        setMoney(prevMoney => prevMoney + owned * productionRate);\n    };\n    // restart the mining function whenever we buy another miner\n    useEffect(() => {\n        setInterval(() => miningWorker(worker), miningSpeed)\n    }, [owned])\n    const reveal = () => {\n        setVisible(prevVisible => !prevVisible)\n    }\n    return (\n        <div className=\"worker\">\n            <div className={ visible ? \"visible\" : \"hidden\"}>\n                <h2 className=\"worker-name\">{worker.name}</h2>\n                <h2>Owned: <span>{owned}</span></h2>\n                <h2>Cost: <span>{cost * multiplier}</span>$</h2>\n                <h2>Production Rate: <span>{productionRate}</span>$</h2>\n                <h2>Upgrade Cost: <span>{productionRateUpgradeCost}</span></h2>\n                <button onClick={() => buyWorker()}>Buy <span>{multiplier}</span>?</button>\n                <button onClick={() => upgradeWorker()}>Upgrade?</button>\n            </div>\n            <div>\n                <button onClick={() => reveal()}>Reveal</button>\n            </div>\n        </div>\n    )\n}\n","/Users/jacobshomali/Documents/GitHub/coal-miner-fixed/src/hooks/useWorker.js",["36","37"],"import {useEffect, useState} from \"react\";\n// take worker and returns a usestate form of the workers rendered variables\nexport default function useWorker(worker) {\n    const [owned, setOwned] = useState(worker.owned);\n    const [productionRate, setProductionRate] = useState(worker.productionRate);\n    const [productionRateUpgradeCost, setProductionRateUpgradeCost] = useState(worker.productionRateUpgradeCost);\n    const [cost, setCost] = useState(worker.cost);\n    useEffect(() => {\n        worker.save()\n    }, [owned, cost, productionRate, productionRateUpgradeCost])\n    return [owned, setOwned, cost, setCost, productionRate, setProductionRate, productionRateUpgradeCost, setProductionRateUpgradeCost]\n}","/Users/jacobshomali/Documents/GitHub/coal-miner-fixed/src/misc.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":36,"column":8,"nodeType":"44","endLine":36,"endColumn":15,"suggestions":"45"},{"ruleId":"46","severity":1,"message":"47","line":3,"column":10,"nodeType":"48","messageId":"49","endLine":3,"endColumn":19},{"ruleId":"42","severity":1,"message":"50","line":10,"column":8,"nodeType":"44","endLine":10,"endColumn":64,"suggestions":"51"},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'miningWorker' and 'worker'. Either include them or remove the dependency array.","ArrayExpression",["54"],"no-unused-vars","'useWorker' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'worker'. Either include it or remove the dependency array.",["55"],"no-global-assign","no-unsafe-negation",{"desc":"56","fix":"57"},{"desc":"58","fix":"59"},"Update the dependencies array to be: [miningWorker, owned, worker]",{"range":"60","text":"61"},"Update the dependencies array to be: [owned, cost, productionRate, productionRateUpgradeCost, worker]",{"range":"62","text":"63"},[1546,1553],"[miningWorker, owned, worker]",[500,556],"[owned, cost, productionRate, productionRateUpgradeCost, worker]"]