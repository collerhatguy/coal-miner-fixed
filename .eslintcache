[{"/Users/jacobshomali/Documents/GitHub/coal-miner-fixed/src/index.js":"1","/Users/jacobshomali/Documents/GitHub/coal-miner-fixed/src/App.js":"2","/Users/jacobshomali/Documents/GitHub/coal-miner-fixed/src/drill.js":"3","/Users/jacobshomali/Documents/GitHub/coal-miner-fixed/src/miner.js":"4","/Users/jacobshomali/Documents/GitHub/coal-miner-fixed/src/misc.js":"5"},{"size":197,"mtime":1610581010000,"results":"6","hashOfConfig":"7"},{"size":4674,"mtime":1610583274000,"results":"8","hashOfConfig":"7"},{"size":397,"mtime":1610582519000,"results":"9","hashOfConfig":"7"},{"size":472,"mtime":1610583215000,"results":"10","hashOfConfig":"7"},{"size":178,"mtime":1610583244000,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"7tgfm0",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/Users/jacobshomali/Documents/GitHub/coal-miner-fixed/src/index.js",[],["24","25"],"/Users/jacobshomali/Documents/GitHub/coal-miner-fixed/src/App.js",["26"],"import React, { useState, useEffect } from \"react\";\nimport { miner } from \"./miner\";\nimport { drill } from \"./drill\";\nimport { currency } from \"./misc\";\nimport \"./App.css\";\n\nfunction App() {\n  // set everything back to default values based on local save\n  const [money, setMoney] = useState(\n    JSON.parse(localStorage.getItem(currency.OWNED_LOCAL_STORAGE_KEY)) || 10\n  );\n  const [ownedMiners, setOwnedMiners] = useState(\n    JSON.parse(localStorage.getItem(miner.OWNED_LOCAL_STORAGE_KEY)) || 0\n  );\n  const [ownedDrills, setOwnedDrills] = useState(\n    JSON.parse(localStorage.getItem(drill.OWNED_LOCAL_STORAGE_KEY)) || 0\n  ); \n  // set multiplier to one\n  const [multiplier, setMultiplier] = useState(1);\n  // chack if we hit the max limit for our upgrades\n  // if (JSON.parse(localStorage.getItem(miner.UPGRADE_CAP_LOCAL_STORAGE_KEY)) = true) { \n  //   document.getElementById(\"minerSpeedUpgradeButton\").remove();\n  // }\n  // if (JSON.parse(localStorage.getItem(drill.UPGRADE_CAP_LOCAL_STORAGE_KEY)) = true) { \n  //   document.getElementById(\"drillSpeedUpgradeButton\").remove();\n  // }\n  // useEffect(currency.save(money), [money]);\n  // useEffect(miner.saveAmount(ownedMiners), [ownedMiners]);\n  // useEffect(drill.saveAmount(ownedDrills), [ownedDrills]);\n  const setMultiplier1 = () => {\n    setMultiplier(1);\n  };\n  const setMultiplier10 = () => {\n    setMultiplier(10);\n  };\n  const setMultiplier100 = () => {\n    setMultiplier(100);\n  };\n  const buyMiner = () => {\n    if (money < miner.cost * multiplier) return;\n    setMoney(money - miner.cost * multiplier);\n    setOwnedMiners(ownedMiners + multiplier);\n    miner.cost += multiplier;\n  };\n  const buyDrill = () => {\n    if (money < drill.cost * multiplier) return;\n    setMoney(money - drill.cost * multiplier);\n    setOwnedDrills(ownedDrills + multiplier);\n    drill.cost += multiplier;\n  };\n  const miningMiners = () => {\n    setMoney((prevMoney) => prevMoney + ownedMiners);\n  };\n  const miningDrills = () => {\n    setMoney((prevMoney) => prevMoney + ownedDrills * 10);\n  };\n  const upgradeMinerSpeed = () => {\n    if (!(money >= miner.speedUpgradeCost)) return;\n    setMoney(money - miner.speedUpgradeCost);\n    miner.speed = miner.speed - miner.speedUpgradeRate;\n    miner.speedUpgradeCost += miner.speedUpgradeCost;\n    if (!(miner.speed - miner.speedUpgradeRate <= 0)) return;\n    localStorage.setItem(miner.UPGRADE_CAP_LOCAL_STORAGE_KEY, JSON.stringify(true))\n    document.getElementById(\"minerSpeedUpgradeButton\").remove();\n  };\n  const upgradeDrillSpeed = () => {\n    if (!(money >= drill.speedUpgradeCost)) return;\n    setMoney(money - drill.speedUpgradeCost);\n    drill.speed = drill.speed - drill.speedUpgradeRate;\n    drill.speedUpgradeCost += drill.speedUpgradeCost;\n    if (!(drill.speed - drill.speedUpgradeRate <= 0)) return;\n    localStorage.setItem(drill.UPGRADE_CAP_LOCAL_STORAGE_KEY, JSON.stringify(true))\n    document.getElementById(\"drillSpeedUpgradeButton\").remove();\n  };\n  setInterval(miningMiners, miner.speed);\n  setInterval(miningDrills, drill.speed);\n  return (\n    <>\n      <h1>Coal Miners</h1>\n      <div id=\"display\">\n        <h2>Money: {money}</h2>\n        <h2>Miners: {ownedMiners}</h2>\n        <h2>Drills: {ownedDrills}</h2>\n      </div>\n      <div id=\"buyContainer\">\n        <button onClick={buyMiner}>\n          Buy Miner ({miner.cost * multiplier}M)\n        </button>\n        <button onClick={buyDrill}>\n          Buy Drill ({drill.cost * multiplier}M)\n        </button>\n      </div>\n      <div id=\"upgradeContainer\">\n        <button id=\"minerSpeedUpgradeButtpn\" onClick={upgradeMinerSpeed}>\n          Upgrade Miner Speed (5,000M)\n        </button>\n        <button id=\"drillSpeedUpgradeButtpn\" onClick={upgradeDrillSpeed}>\n          Upgrade Drill Speed (50,000M)\n        </button>\n      </div>\n      <div id=\"multiplierContainer\">\n        <fieldset>\n          <legend>Multipliers for buying in mass:</legend>\n          <label for=\"1multiplier\">1x</label>\n          <input\n            type=\"radio\"\n            value=\"1\"\n            id=\"1multiplier\"\n            name=\"multiplier\"\n            onClick={setMultiplier1}\n          ></input>\n          <label for=\"10multiplier\">10x</label>\n          <input\n            type=\"radio\"\n            value=\"10\"\n            id=\"10multiplier\"\n            name=\"multiplier\"\n            onClick={setMultiplier10}\n          ></input>\n          <label for=\"100multiplier\">100x</label>\n          <input\n            type=\"radio\"\n            value=\"100\"\n            id=\"100multiplier\"\n            name=\"multiplier\"\n            onClick={setMultiplier100}\n          ></input>\n        </fieldset>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","/Users/jacobshomali/Documents/GitHub/coal-miner-fixed/src/drill.js",[],"/Users/jacobshomali/Documents/GitHub/coal-miner-fixed/src/miner.js",[],"/Users/jacobshomali/Documents/GitHub/coal-miner-fixed/src/misc.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":1,"column":27,"nodeType":"33","messageId":"34","endLine":1,"endColumn":36},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]