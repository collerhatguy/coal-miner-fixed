{"version":3,"sources":["hooks/useWorker.js","components/Worker.js","images/drill.png","images/worker.png","images/monky.png","misc.js","components/WorkerList.js","components/Multiplier.js","components/MultiplierList.js","App.js","index.js"],"names":["ACTIONS","reducer","state","action","type","productionRate","productionRateUpgradeCost","level","owned","payload","cost","Worker","worker","money","setMoney","multiplier","useReducer","dispatch","useState","miningTrigger","setMiningTrigger","progressTrigger","setProgressTrigger","goldMined","setGoldMined","Date","now","lastMinedTime","setLastMinedTime","progress","setProgress","BuyWorker","useCallback","totalCost","prevMoney","UpgradeWorker","useEffect","setInterval","prevMining","speed","prevProgress","Math","floor","useWorker","workerState","affordable","setAffordable","visible","setVisible","className","name","tabIndex","onClick","max","value","src","img","defaultCost","defaultProductionRate","defaultProductionRateUpgradeCost","miningSpeed","this","OWNED_LOCAL_STORAGE_KEY","COST_LOCAL_STORAGE_KEY","UPGRADE_CAP_LOCAL_STORAGE_KEY","CURRENT_PRODUCTION_RATE_LOCAL_STORAGE_KEY","CURRENT_PRODUCTION_RATE_UPGRADE_COST_LOCAL_STORAGE_KEY","JSON","parse","localStorage","getItem","CURRENT_PPRODUCTION_RATE_LOCAL_STORAGE_KEY","saveFiles","key","forEach","save","setItem","stringify","Workers","workerImg","drillImg","monkeyImg","WorkerList","id","map","index","Multiplier","amount","setMultiplier","for","MultiplierList","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09cdd1a3.chunk.js","sourcesContent":["import { useReducer, useEffect, useCallback, useState } from \"react\";\n\nconst ACTIONS = {\n    Upgrade: \"UpgradeWorker\",\n    Buy: \"BuyWorker\",\n    Mining: \"MiningWorker\",\n}\nfunction reducer(state, action) {\n    switch(action.type) {\n        case ACTIONS.Upgrade:\n            return {\n                ...state,\n                productionRate: state.productionRate + 1, \n                productionRateUpgradeCost: state.productionRateUpgradeCost * 2,\n                level: state.level + 1, \n            }\n        case ACTIONS.Buy:\n            return {\n                ...state,\n                owned: state.owned + action.payload,\n                cost: state.cost + action.payload, \n            }\n        default: return state;\n    }\n}\nexport default function useWorker(worker, setMoney, money, multiplier) {\n    const [state, dispatch] = useReducer(reducer, worker);\n    const progressSpeed = 50;\n    const [miningTrigger, setMiningTrigger] = useState(0);\n    const [progressTrigger, setProgressTrigger] = useState(0);\n    const [goldMined, setGoldMined] = useState(worker.owned * worker.productionRate);\n    const [lastMinedTime, setLastMinedTime] = useState(Date.now());\n    const [progress, setProgress] = useState(0);\n\n    const BuyWorker = useCallback(() => {\n        const totalCost = state.cost * multiplier;\n        if (money < totalCost) return;\n        setMoney(prevMoney => prevMoney - totalCost);\n        dispatch({type: ACTIONS.Buy, payload: multiplier})\n    }, [state, multiplier, money])\n\n    const UpgradeWorker = useCallback(() => {\n        if (money < state.productionRateUpgradeCost) return;\n        setMoney(prevMoney => prevMoney - state.productionRateUpgradeCost);\n        dispatch({type: ACTIONS.Upgrade})\n    }, [state, money])\n\n    useEffect(() => {\n        setInterval(() => {\n            setMiningTrigger(prevMining => prevMining + 1)\n        }, state.speed)\n        setInterval(() => {\n            setProgressTrigger(prevProgress => prevProgress + 1)\n        }, progressSpeed)\n    }, []);\n\n    useEffect(() => {\n        setMoney(prevMoney => prevMoney + goldMined);\n        setLastMinedTime(Date.now());\n    }, [miningTrigger]);\n\n    useEffect(() => {\n        if (state.owned === 0) return;\n        setProgress(Math.floor(((Date.now() - lastMinedTime) / state.speed) * 100));\n    }, [progressTrigger])\n\n    useEffect(() => {\n        setGoldMined(state.owned * state.productionRate);\n    }, [state]);\n    \n    return [state, progress, BuyWorker, UpgradeWorker];\n}","import React, {useState, useEffect} from 'react';\nimport useWorker from \"../hooks/useWorker\";\n\n\nexport default function Worker({worker, money, setMoney, multiplier}) {\n    const [workerState, progress, BuyWorker, UpgradeWorker] = useWorker(worker, setMoney, money, multiplier);\n    const [affordable, setAffordable] = useState(false)\n    const [visible, setVisible] = useState(true)\n    useEffect(() => {\n        if (worker.cost <= money) setAffordable(true); \n    }, [money])\n    return (\n        <div className={`worker ${affordable ? \"\" : \"unaffordable\"}`}>\n            <h3 className=\"worker-name\">{workerState.name}</h3>\n            <div>\n                <button tabIndex=\"0\"\n                    onClick={() => setVisible(!visible)}>\n                    {visible ? \"Hide?\" : \"Reveal?\"}\n                </button>\n            </div>\n            {visible ? <div>\n                <progress max={100} value={progress} />\n                <img\n                    className=\"worker-image\" \n                    src={workerState.img} />\n                <h4>Owned: <span>{workerState.owned}</span></h4>\n                <h4>Cost: <span>{workerState.cost * multiplier}</span>$</h4>\n                <h4>Production Rate: <span>{workerState.productionRate}</span>$</h4>\n                <h4>Upgrade Cost: <span>{workerState.productionRateUpgradeCost}</span>$</h4>\n                <h4>Level: <span>{workerState.level}</span></h4>\n                <button onClick={() => BuyWorker()}>Buy <span>{multiplier}</span>?</button>\n                <button onClick={() => UpgradeWorker()}>Upgrade?</button>\n            </div> : null}\n        </div>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/drill.1a13da94.png\";","export default __webpack_public_path__ + \"static/media/worker.5a8cd7ac.png\";","export default __webpack_public_path__ + \"static/media/monky.16a653ef.png\";","import drillImg from \"./images/drill.png\";\nimport workerImg from \"./images/worker.png\";\nimport monkeyImg from \"./images/monky.png\";\nclass Worker {\n  constructor({\n    defaultCost,\n    defaultProductionRate, \n    defaultProductionRateUpgradeCost, \n    name,\n    img,\n    miningSpeed\n  }) {\n        \n      // storage keys\n      this.OWNED_LOCAL_STORAGE_KEY = `Coalminer.${name}Owned`;\n      this.COST_LOCAL_STORAGE_KEY = `Coalminer.${name}Cost`;\n      this.UPGRADE_CAP_LOCAL_STORAGE_KEY = `Coalminer.${name}CapLimit`;\n      this.CURRENT_PRODUCTION_RATE_LOCAL_STORAGE_KEY = `Coalminer.${name}CurrentProductionRate`;\n      this.CURRENT_PRODUCTION_RATE_UPGRADE_COST_LOCAL_STORAGE_KEY = `Coalminer.${name}CurrentProductionRateUpgradeCost`;\n      \n      this.name = name;\n      this.owned = JSON.parse(localStorage.getItem(this.OWNED_LOCAL_STORAGE_KEY)) || 0;\n      this.cost =  JSON.parse(localStorage.getItem(this.COST_LOCAL_STORAGE_KEY)) || defaultCost;\n      this.productionRate = JSON.parse(localStorage.getItem(this.CURRENT_PPRODUCTION_RATE_LOCAL_STORAGE_KEY)) || defaultProductionRate;\n      this.productionRateUpgradeCost = JSON.parse(localStorage.getItem(this.CURRENT_PRODUCTION_RATE_UPGRADE_COST_LOCAL_STORAGE_KEY)) || defaultProductionRateUpgradeCost;\n      this.level = 0;\n      this.img = img;\n      this.speed = miningSpeed;\n      this.saveFiles = [\n        {\n          key: this.OWNED_LOCAL_STORAGE_KEY,\n          value: this.owned\n        },\n        {\n          key: this.COST_LOCAL_STORAGE_KEY,\n          value: this.cost\n        },\n        {\n          key: this.CURRENT_PRODUCTION_RATE_LOCAL_STORAGE_KEY,\n          value: this.productionRate\n        },\n        {\n          key: this.CURRENT_PRODUCTION_RATE_UPGRADE_COST_LOCAL_STORAGE_KEY,\n          value: this.productionRateUpgradeCost\n        }\n      ]\n    }\n    \n    save() {\n      this.saveFiles.forEach(save => {\n        localStorage.setItem(save.key, JSON.stringify(save.value))\n      })\n    }\n}\n\nconst miners = new Worker({\n  defaultCost: 10,\n  defaultProductionRate: 1, \n  defaultProductionRateUpgradeCost: 30, \n  name: \"Miners\",\n  img: workerImg,\n  miningSpeed: 3000,\n});\nconst drills = new Worker({\n  defaultCost: 50,\n  defaultProductionRate: 10, \n  defaultProductionRateUpgradeCost: 100, \n  name: \"Drills\",\n  img: drillImg,\n  miningSpeed: 2000,\n});\nconst monkeyMiners = new Worker({\n  defaultCost: 100,\n  defaultProductionRate: 20, \n  defaultProductionRateUpgradeCost: 300, \n  name: \"Monkey Miners\",\n  img: monkeyImg,\n  miningSpeed: 1000,\n})\nconst Workers = [miners, drills, monkeyMiners]\nexport default Workers;\n","import React from 'react';\nimport Worker from \"./Worker\";\nimport Workers from \"../misc\";\n\nexport default function WorkerList({ money, setMoney, multiplier}) {\n    return (\n        <section id=\"worker-list\">\n            {Workers.map((worker, index) => \n                <Worker \n                    worker={worker} \n                    money={money} \n                    setMoney={setMoney} \n                    multiplier={multiplier} \n                    key={index} \n                />\n            )}\n        </section>\n    )\n}\n","import React from 'react'\n\nexport default function Multiplier({amount, setMultiplier}) {\n    return (\n        <label for={`${amount}-multiplier`}>\n            {amount}x\n            <input\n                type=\"radio\"\n                value={amount}\n                id={`${amount}-multiplier`}\n                name=\"multiplier\"\n                onClick={() => {setMultiplier(amount)}}\n            ></input>\n        </label>\n    )\n}\n","import React from 'react'\nimport Multiplier from \"./Multiplier\";\n\nexport default function MultiplierList({setMultiplier}) {\n    return (\n        <section id=\"multiplierContainer\">\n            <fieldset>\n                <legend>Multipliers for buying in mass:</legend>\n                <Multiplier amount={1} setMultiplier={setMultiplier} key=\"1\" />\n                <Multiplier amount={10} setMultiplier={setMultiplier} key=\"10\" />\n                <Multiplier amount={100} setMultiplier={setMultiplier} key=\"100\" />\n            </fieldset>\n        </section>\n    )\n}\n","import React, { useEffect, useState } from \"react\";\nimport WorkerList from \"./components/WorkerList\";\n\nimport \"./css/App.css\";\nimport MultiplierList from \"./components/MultiplierList\";\n\nfunction App() {\n  const [money, setMoney] = useState(10\n    // JSON.parse(localStorage.getItem(\"CoalMiner.money\")) || 10\n  );\n  const [multiplier, setMultiplier] = useState(1);\n  useEffect(() => {\n    localStorage.setItem(\"GoldMiner.money\", JSON.stringify(money))\n  }, [money])\n  return (\n    <main>\n      <h2>Current Money: {money}</h2>\n      <WorkerList money={money} setMoney={setMoney} multiplier={multiplier} />\n      <MultiplierList setMultiplier={setMultiplier} />\n    </main>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}