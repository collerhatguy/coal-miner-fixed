{"version":3,"sources":["components/Worker.js","hooks/useWorker.js","components/WorkerList.js","misc.js","components/Multiplier.js","App.js","index.js"],"names":["Worker","worker","money","setMoney","multiplier","useState","visible","setVisible","owned","setOwned","productionRate","setProductionRate","productionRateUpgradeCost","setProductionRateUpgradeCost","cost","setCost","useEffect","save","useWorker","setInterval","prevMoney","reveal","prevVisible","className","name","onClick","totalCost","prevOwned","prevCost","buyWorker","prevProductionRate","prevProductionRateUpgradeCost","tabIndex","style","display","WorkerList","workers","id","map","index","defaultCost","defaultProductionRate","defaultProductionRateUpgradeCost","this","OWNED_LOCAL_STORAGE_KEY","COST_LOCAL_STORAGE_KEY","UPGRADE_CAP_LOCAL_STORAGE_KEY","CURRENT_PRODUCTION_RATE_LOCAL_STORAGE_KEY","CURRENT_PRODUCTION_RATE_UPGRADE_COST_LOCAL_STORAGE_KEY","saveFiles","key","value","forEach","localStorage","setItem","JSON","stringify","Workers","Multiplier","setMultiplier","for","type","e","target","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf606c23.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport useWorker from \"../hooks/useWorker\";\n\nexport default function Worker({worker, money, setMoney, multiplier}) {\n    const miningSpeed = 10000;\n    const [visible, setVisible] = useState(true);\n    const [ \n        owned, setOwned, \n        cost, setCost, \n        productionRate, setProductionRate, \n        productionRateUpgradeCost, setProductionRateUpgradeCost] = useWorker(worker)\n    const buyWorker = () => {\n        // check if there is enough money\n        const totalCost = cost * multiplier;\n        if (money < totalCost) return;\n        // if there is subtract from funds\n        setMoney(prevMoney => prevMoney - totalCost);\n        // adjust the stats accoringly\n        setOwned(prevOwned => prevOwned + multiplier);\n        setCost(prevCost => prevCost + multiplier);\n    };\n    // upgrade the workers production rate\n    const upgradeWorker = () => {\n        if (productionRateUpgradeCost > money) return;\n        setMoney(prevMoney => prevMoney - productionRateUpgradeCost);\n        setProductionRate(prevProductionRate => prevProductionRate + 1);\n        setProductionRateUpgradeCost(prevProductionRateUpgradeCost => prevProductionRateUpgradeCost * 2);\n    };\n    // the functoin for whenever our worker mines\n    const miningWorker = () => {\n        setMoney(prevMoney => prevMoney + owned * productionRate);\n    };\n    // restart the mining function whenever we buy another miner\n    useEffect(() => {\n        setInterval(() => miningWorker(worker), miningSpeed)\n    }, [owned])\n    const reveal = () => {\n        setVisible(prevVisible => !prevVisible)\n    }\n    return (\n        <div className=\"worker\">\n            <h2 className=\"worker-name\">{worker.name}</h2>\n            <div className={ visible ? \"visible\" : \"hidden\"}>\n                <h2>Owned: <span>{owned}</span></h2>\n                <h2>Cost: <span>{cost * multiplier}</span>$</h2>\n                <h2>Production Rate: <span>{productionRate}</span>$</h2>\n                <h2>Upgrade Cost: <span>{productionRateUpgradeCost}</span></h2>\n                <button onClick={() => buyWorker()}>Buy <span>{multiplier}</span>?</button>\n                <button onClick={() => upgradeWorker()}>Upgrade?</button>\n            </div>\n            <div>\n                <button \n                    tabIndex=\"0\"\n                    style={{\n                        display: visible ? \"block\" : \"none\",\n                    }}\n                    onClick={() => reveal()}\n                >\n                    Minimize\n                </button>\n                <button \n                    tabIndex=\"0\"\n                    style={{\n                        display: visible ? \"none\" : \"block\",\n                    }}\n                    onClick={() => reveal()}\n                >\n                    Reveal\n                </button>\n            </div>\n        </div>\n    )\n}\n","import {useEffect, useState} from \"react\";\n// take worker and returns a usestate form of the workers rendered variables\nexport default function useWorker(worker) {\n    const [owned, setOwned] = useState(worker.owned);\n    const [productionRate, setProductionRate] = useState(worker.productionRate);\n    const [productionRateUpgradeCost, setProductionRateUpgradeCost] = useState(worker.productionRateUpgradeCost);\n    const [cost, setCost] = useState(worker.cost);\n    useEffect(() => {\n        worker.save()\n    }, [owned, cost, productionRate, productionRateUpgradeCost])\n    return [owned, setOwned, cost, setCost, productionRate, setProductionRate, productionRateUpgradeCost, setProductionRateUpgradeCost]\n}","import React from 'react'\nimport Worker from \"./Worker\";\n\nexport default function WorkerList({workers, money, setMoney, multiplier}) {\n    return (\n        <div id=\"worker-list\">\n            {workers.map((worker, index) => {\n                return <Worker worker={worker} money={money} setMoney={setMoney} multiplier={multiplier} key={index} />\n            })}\n        </div>\n    )\n}\n","\nclass Worker {\n  constructor(\n    defaultCost,\n    defaultProductionRate, \n    defaultProductionRateUpgradeCost, \n    name\n    ) {\n        \n      // storage keys\n      this.OWNED_LOCAL_STORAGE_KEY = `Coalminer.${name}Owned`;\n      this.COST_LOCAL_STORAGE_KEY = `Coalminer.${name}Cost`;\n      this.UPGRADE_CAP_LOCAL_STORAGE_KEY = `Coalminer.${name}CapLimit`;\n      this.CURRENT_PRODUCTION_RATE_LOCAL_STORAGE_KEY = `Coalminer.${name}CurrentProductionRate`;\n      this.CURRENT_PRODUCTION_RATE_UPGRADE_COST_LOCAL_STORAGE_KEY = `Coalminer.${name}CurrentProductionRateUpgradeCost`;\n      \n      this.name = name;\n      this.owned = 0;\n      this.cost = defaultCost;\n      this.productionRate = defaultProductionRate;\n      this.productionRateUpgradeCost = defaultProductionRateUpgradeCost;\n      this.saveFiles = [\n        {\n          key: this.OWNED_LOCAL_STORAGE_KEY,\n          value: this.owned\n        },\n        {\n          key: this.COST_LOCAL_STORAGE_KEY,\n          value: this.cost\n        },\n        {\n          key: this.CURRENT_PRODUCTION_RATE_LOCAL_STORAGE_KEY,\n          value: this.productionRate\n        },\n        {\n          key: this.CURRENT_PRODUCTION_RATE_UPGRADE_COST_LOCAL_STORAGE_KEY,\n          value: this.productionRateUpgradeCost\n        }\n      ]\n    }\n    \n    save() {\n      this.saveFiles.forEach(save => {\n        localStorage.setItem(save.key, JSON.stringify(save.value))\n      })\n    }\n}\n\nconst miners = new Worker(10, 1, 100, \"Miners\")\nconst drills = new Worker(100, 2, 1000, \"Drills\")\nconst Workers = [miners, drills]\nexport default Workers;\n","import React from 'react'\n\nexport default function Multiplier({setMultiplier}) {\n    return (\n        <div id=\"multiplierContainer\">\n            <fieldset>\n            <legend>Multipliers for buying in mass:</legend>\n            <label for=\"1multiplier\">1x</label>\n            <input\n                type=\"radio\"\n                value={1}\n                id=\"1multiplier\"\n                name=\"multiplier\"\n                onClick={e => {setMultiplier(e.target.value)}}\n            ></input>\n            <label for=\"10multiplier\">10x</label>\n            <input\n                type=\"radio\"\n                value={10}\n                id=\"10multiplier\"\n                name=\"multiplier\"\n                onClick={e => {setMultiplier(e.target.value)}}\n            ></input>\n            <label for=\"100multiplier\">100x</label>\n            <input\n                type=\"radio\"\n                value={100}\n                id=\"100multiplier\"\n                name=\"multiplier\"\n                onClick={e => {setMultiplier(e.target.value)}}\n            ></input>\n            </fieldset>\n        </div>\n    )\n}\n","import React, { useEffect, useState } from \"react\";\nimport WorkerList from \"./components/WorkerList\"\n\nimport Workers from \"./misc\";\nimport \"./css/App.css\";\nimport Multiplier from \"./components/Multiplier\";\n\nfunction App() {\n  // set everything back to default values based on local save\n  const [money, setMoney] = useState(10\n    // JSON.parse(localStorage.getItem(\"CoalMiner.money\")) || 10\n  );\n  const [multiplier, setMultiplier] = useState(1);\n  // for saving money\n  useEffect(() => {\n    localStorage.setItem(\"coalMiner.money\", JSON.stringify(money))\n  }, [money])\n\n  return (\n    <>\n      <h1>Coal Miners</h1>\n      <h2>Current Money: {money}</h2>\n      <WorkerList workers={Workers} money={money} setMoney={setMoney} multiplier={multiplier} />\n      <Multiplier setMultiplier={setMultiplier} />\n    </>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}