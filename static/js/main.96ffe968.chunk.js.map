{"version":3,"sources":["hooks/useWorker.js","components/Worker.js","hooks/useVisible.js","images/drill.png","images/worker.png","images/monky.png","misc.js","components/WorkerList.js","components/Multiplier.js","components/MultiplierList.js","App.js","index.js"],"names":["ACTIONS","reducer","state","action","type","productionRate","productionRateUpgradeCost","level","owned","payload","cost","Worker","worker","money","setMoney","multiplier","useState","visible","setVisible","reveal","useCallback","prevVisible","element","useRef","useEffect","current","style","display","console","log","useVisible","workerVisibility","useReducer","dispatch","miningTrigger","setMiningTrigger","progressTrigger","setProgressTrigger","goldMined","setGoldMined","Date","now","lastMinedTime","setLastMinedTime","progress","setProgress","BuyWorker","totalCost","prevMoney","UpgradeWorker","setInterval","prevMining","speed","prevProgress","Math","floor","useWorker","workerState","affordable","setAffordable","className","name","ref","max","value","src","img","onClick","tabIndex","defaultCost","defaultProductionRate","defaultProductionRateUpgradeCost","miningSpeed","this","OWNED_LOCAL_STORAGE_KEY","COST_LOCAL_STORAGE_KEY","UPGRADE_CAP_LOCAL_STORAGE_KEY","CURRENT_PRODUCTION_RATE_LOCAL_STORAGE_KEY","CURRENT_PRODUCTION_RATE_UPGRADE_COST_LOCAL_STORAGE_KEY","JSON","parse","localStorage","getItem","CURRENT_PPRODUCTION_RATE_LOCAL_STORAGE_KEY","saveFiles","key","forEach","save","setItem","stringify","Workers","workerImg","drillImg","monkeyImg","WorkerList","id","map","index","Multiplier","amount","setMultiplier","for","MultiplierList","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96ffe968.chunk.js","sourcesContent":["import { useReducer, useEffect, useCallback, useState } from \"react\";\n\nconst ACTIONS = {\n    Upgrade: \"UpgradeWorker\",\n    Buy: \"BuyWorker\",\n    Mining: \"MiningWorker\",\n}\nfunction reducer(state, action) {\n    switch(action.type) {\n        case ACTIONS.Upgrade:\n            return {\n                ...state,\n                productionRate: state.productionRate + 1, \n                productionRateUpgradeCost: state.productionRateUpgradeCost * 2,\n                level: state.level + 1, \n            }\n        case ACTIONS.Buy:\n            return {\n                ...state,\n                owned: state.owned + action.payload,\n                cost: state.cost + action.payload, \n            }\n        default: return state;\n    }\n}\nexport default function useWorker(worker, setMoney, money, multiplier) {\n    const [state, dispatch] = useReducer(reducer, worker);\n    const progressSpeed = 50;\n    const [miningTrigger, setMiningTrigger] = useState(0);\n    const [progressTrigger, setProgressTrigger] = useState(0);\n    const [goldMined, setGoldMined] = useState(worker.owned * worker.productionRate);\n    const [lastMinedTime, setLastMinedTime] = useState(Date.now());\n    const [progress, setProgress] = useState(0);\n\n    const BuyWorker = useCallback(() => {\n        const totalCost = state.cost * multiplier;\n        if (money < totalCost) return;\n        setMoney(prevMoney => prevMoney - totalCost);\n        dispatch({type: ACTIONS.Buy, payload: multiplier})\n    }, [state, multiplier, money])\n\n    const UpgradeWorker = useCallback(() => {\n        if (money < state.productionRateUpgradeCost) return;\n        setMoney(prevMoney => prevMoney - state.productionRateUpgradeCost);\n        dispatch({type: ACTIONS.Upgrade})\n    }, [state, money])\n\n    useEffect(() => {\n        setInterval(() => {\n            setMiningTrigger(prevMining => prevMining + 1)\n        }, state.speed)\n        setInterval(() => {\n            setProgressTrigger(prevProgress => prevProgress + 1)\n        }, progressSpeed)\n    }, []);\n\n    useEffect(() => {\n        setMoney(prevMoney => prevMoney + goldMined);\n        setLastMinedTime(Date.now());\n    }, [miningTrigger]);\n\n    useEffect(() => {\n        if (state.owned === 0) return;\n        setProgress(Math.floor(((Date.now() - lastMinedTime) / state.speed) * 100));\n    }, [progressTrigger])\n\n    useEffect(() => {\n        setGoldMined(state.owned * state.productionRate);\n    }, [state]);\n    \n    return [state, progress, BuyWorker, UpgradeWorker];\n}","import React, {useState, useEffect} from 'react';\nimport useVisible from \"../hooks/useVisible\";\nimport useWorker from \"../hooks/useWorker\";\n\n\nexport default function Worker({worker, money, setMoney, multiplier}) {\n    const [workerVisibility, visible, reveal] = useVisible();\n    const [workerState, progress, BuyWorker, UpgradeWorker] = useWorker(worker, setMoney, money, multiplier);\n    const [affordable, setAffordable] = useState(false)\n    useEffect(() => {\n        if (worker.cost <= money) setAffordable(true); \n    }, [money])\n    return (\n        <div className={`worker ${affordable ? \"\" : \"unaffordable\"}`}\n            >\n            <h3 className=\"worker-name\">{workerState.name}</h3>\n             <div\n                ref={workerVisibility} \n                >\n                <progress max={100} value={progress} />\n                <img\n                    className=\"worker-image\" \n                    src={workerState.img} />\n                <h4>Owned: <span>{workerState.owned}</span></h4>\n                <h4>Cost: <span>{workerState.cost * multiplier}</span>$</h4>\n                <h4>Production Rate: <span>{workerState.productionRate}</span>$</h4>\n                <h4>Upgrade Cost: <span>{workerState.productionRateUpgradeCost}</span>$</h4>\n                <h4>Level: <span>{workerState.level}</span></h4>\n                <button onClick={() => BuyWorker()}>Buy <span>{multiplier}</span>?</button>\n                <button onClick={() => UpgradeWorker()}>Upgrade?</button>\n            </div>\n            <div>\n                <button \n                    tabIndex=\"0\"\n                    onClick={() => reveal()}\n                >\n                    {visible ? \"Hide?\" : \"Reveal?\"}\n                </button>\n            </div>\n        </div>\n    )\n}\n","import {useState, useRef, useEffect, useCallback} from \"react\";\n\nexport default function useVisible() {\n\n    const [visible, setVisible] = useState(true);\n\n    const reveal = useCallback(() => {\n        setVisible(prevVisible => !prevVisible)\n    }, [])\n    const element = useRef();\n    useEffect(() => {\n        if (visible) element.current.style.display = \"block\";\n        if (!visible) element.current.style.display = \"none\";\n        console.log(element)\n    }, [visible]);\n    return [element, visible, reveal];\n}","export default __webpack_public_path__ + \"static/media/drill.1a13da94.png\";","export default __webpack_public_path__ + \"static/media/worker.5a8cd7ac.png\";","export default __webpack_public_path__ + \"static/media/monky.16a653ef.png\";","import drillImg from \"./images/drill.png\";\nimport workerImg from \"./images/worker.png\";\nimport monkeyImg from \"./images/monky.png\";\nclass Worker {\n  constructor({\n    defaultCost,\n    defaultProductionRate, \n    defaultProductionRateUpgradeCost, \n    name,\n    img,\n    miningSpeed\n  }) {\n        \n      // storage keys\n      this.OWNED_LOCAL_STORAGE_KEY = `Coalminer.${name}Owned`;\n      this.COST_LOCAL_STORAGE_KEY = `Coalminer.${name}Cost`;\n      this.UPGRADE_CAP_LOCAL_STORAGE_KEY = `Coalminer.${name}CapLimit`;\n      this.CURRENT_PRODUCTION_RATE_LOCAL_STORAGE_KEY = `Coalminer.${name}CurrentProductionRate`;\n      this.CURRENT_PRODUCTION_RATE_UPGRADE_COST_LOCAL_STORAGE_KEY = `Coalminer.${name}CurrentProductionRateUpgradeCost`;\n      \n      this.name = name;\n      this.owned = JSON.parse(localStorage.getItem(this.OWNED_LOCAL_STORAGE_KEY)) || 0;\n      this.cost =  JSON.parse(localStorage.getItem(this.COST_LOCAL_STORAGE_KEY)) || defaultCost;\n      this.productionRate = JSON.parse(localStorage.getItem(this.CURRENT_PPRODUCTION_RATE_LOCAL_STORAGE_KEY)) || defaultProductionRate;\n      this.productionRateUpgradeCost = JSON.parse(localStorage.getItem(this.CURRENT_PRODUCTION_RATE_UPGRADE_COST_LOCAL_STORAGE_KEY)) || defaultProductionRateUpgradeCost;\n      this.level = 0;\n      this.img = img;\n      this.speed = miningSpeed;\n      this.saveFiles = [\n        {\n          key: this.OWNED_LOCAL_STORAGE_KEY,\n          value: this.owned\n        },\n        {\n          key: this.COST_LOCAL_STORAGE_KEY,\n          value: this.cost\n        },\n        {\n          key: this.CURRENT_PRODUCTION_RATE_LOCAL_STORAGE_KEY,\n          value: this.productionRate\n        },\n        {\n          key: this.CURRENT_PRODUCTION_RATE_UPGRADE_COST_LOCAL_STORAGE_KEY,\n          value: this.productionRateUpgradeCost\n        }\n      ]\n    }\n    \n    save() {\n      this.saveFiles.forEach(save => {\n        localStorage.setItem(save.key, JSON.stringify(save.value))\n      })\n    }\n}\n\nconst miners = new Worker({\n  defaultCost: 10,\n  defaultProductionRate: 1, \n  defaultProductionRateUpgradeCost: 30, \n  name: \"Miners\",\n  img: workerImg,\n  miningSpeed: 3000,\n});\nconst drills = new Worker({\n  defaultCost: 50,\n  defaultProductionRate: 10, \n  defaultProductionRateUpgradeCost: 100, \n  name: \"Drills\",\n  img: drillImg,\n  miningSpeed: 2000,\n});\nconst monkeyMiners = new Worker({\n  defaultCost: 100,\n  defaultProductionRate: 20, \n  defaultProductionRateUpgradeCost: 300, \n  name: \"Monkey Miners\",\n  img: monkeyImg,\n  miningSpeed: 1000,\n})\nconst Workers = [miners, drills, monkeyMiners]\nexport default Workers;\n","import React from 'react';\nimport Worker from \"./Worker\";\nimport Workers from \"../misc\";\n\nexport default function WorkerList({ money, setMoney, multiplier}) {\n    return (\n        <section id=\"worker-list\">\n            {Workers.map((worker, index) => {\n                return <Worker \n                            worker={worker} \n                            money={money} \n                            setMoney={setMoney} \n                            multiplier={multiplier} \n                            key={index} \n                        />\n            })}\n        </section>\n    )\n}\n","import React from 'react'\n\nexport default function Multiplier({amount, setMultiplier}) {\n    return (\n        <label for={`${amount}-multiplier`}>{amount}x\n            <input\n                type=\"radio\"\n                value={amount}\n                id={`${amount}-multiplier`}\n                name=\"multiplier\"\n                onClick={() => {setMultiplier(amount)}}\n            ></input>\n        </label>\n    )\n}\n","import React from 'react'\nimport Multiplier from \"./Multiplier\";\n\nexport default function MultiplierList({setMultiplier}) {\n    return (\n        <section id=\"multiplierContainer\">\n            <fieldset>\n                <legend>Multipliers for buying in mass:</legend>\n                <Multiplier amount={1} setMultiplier={setMultiplier} key=\"1\" />\n                <Multiplier amount={10} setMultiplier={setMultiplier} key=\"10\" />\n                <Multiplier amount={100} setMultiplier={setMultiplier} key=\"100\" />\n            </fieldset>\n        </section>\n    )\n}\n","import React, { useEffect, useState } from \"react\";\nimport WorkerList from \"./components/WorkerList\";\n\nimport \"./css/App.css\";\nimport MultiplierList from \"./components/MultiplierList\";\n\nfunction App() {\n  const [money, setMoney] = useState(10\n    // JSON.parse(localStorage.getItem(\"CoalMiner.money\")) || 10\n  );\n  const [multiplier, setMultiplier] = useState(1);\n  useEffect(() => {\n    localStorage.setItem(\"GoldMiner.money\", JSON.stringify(money))\n  }, [money])\n  return (\n    <main>\n      <h2>Current Money: {money}</h2>\n      <WorkerList money={money} setMoney={setMoney} multiplier={multiplier} />\n      <MultiplierList setMultiplier={setMultiplier} />\n    </main>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}