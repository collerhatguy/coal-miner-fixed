{"version":3,"sources":["hooks/useWorker.js","components/Worker.js","hooks/useVisible.js","images/drill.png","images/worker.png","images/monky.png","misc.js","components/WorkerList.js","components/Multiplier.js","components/MultiplierList.js","App.js","index.js"],"names":["ACTIONS","reducer","state","action","type","productionRate","productionRateUpgradeCost","level","owned","payload","cost","Worker","worker","money","setMoney","multiplier","useState","visible","setVisible","reveal","useCallback","prevVisible","element","useRef","useEffect","current","style","display","console","log","useVisible","workerVisibility","useReducer","dispatch","mining","setMining","goldMined","setGoldMined","BuyWorker","totalCost","prevMoney","UpgradeWorker","setInterval","prevMining","useWorker","workerState","affordable","setAffordable","className","name","ref","src","img","onClick","tabIndex","defaultCost","defaultProductionRate","defaultProductionRateUpgradeCost","this","OWNED_LOCAL_STORAGE_KEY","COST_LOCAL_STORAGE_KEY","UPGRADE_CAP_LOCAL_STORAGE_KEY","CURRENT_PRODUCTION_RATE_LOCAL_STORAGE_KEY","CURRENT_PRODUCTION_RATE_UPGRADE_COST_LOCAL_STORAGE_KEY","JSON","parse","localStorage","getItem","CURRENT_PPRODUCTION_RATE_LOCAL_STORAGE_KEY","saveFiles","key","value","forEach","save","setItem","stringify","Workers","workerImg","drillImg","monkeyImg","WorkerList","id","map","index","Multiplier","amount","setMultiplier","for","MultiplierList","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b091787c.chunk.js","sourcesContent":["import { useReducer, useEffect, useCallback, useState } from \"react\";\n\nconst ACTIONS = {\n    Upgrade: \"UpgradeWorker\",\n    Buy: \"BuyWorker\",\n    Mining: \"MiningWorker\",\n}\nfunction reducer(state, action) {\n    switch(action.type) {\n        case ACTIONS.Upgrade:\n            return {\n                ...state,\n                productionRate: state.productionRate + 1, \n                productionRateUpgradeCost: state.productionRateUpgradeCost * 2,\n                level: state.level + 1, \n            }\n        case ACTIONS.Buy:\n            return {\n                ...state,\n                owned: state.owned + action.payload,\n                cost: state.cost + action.payload, \n            }\n        default: return state;\n    }\n}\nexport default function useWorker(worker, setMoney, money, multiplier) {\n    const [state, dispatch] = useReducer(reducer, worker);\n    const miningSpeed = 3000;\n    const [mining, setMining] = useState(0);\n    const [goldMined, setGoldMined] = useState(worker.owned * worker.productionRate);\n\n    const BuyWorker = useCallback(() => {\n        const totalCost = state.cost * multiplier;\n        if (money < totalCost) return;\n        setMoney(prevMoney => prevMoney - totalCost);\n        dispatch({type: ACTIONS.Buy, payload: multiplier})\n    }, [state, multiplier, money])\n\n    const UpgradeWorker = useCallback(() => {\n        if (money < state.productionRateUpgradeCost) return;\n        setMoney(prevMoney => prevMoney - state.productionRateUpgradeCost);\n        dispatch({type: ACTIONS.Upgrade})\n    }, [state, money])\n\n    useEffect(() => {\n        setInterval(() => {\n            setMining(prevMining => prevMining + 1)\n        }, miningSpeed)\n    }, []);\n    useEffect(() => {\n        setMoney(prevMoney => prevMoney + goldMined)\n    }, [mining]);\n    useEffect(() => {\n        setGoldMined(state.owned * state.productionRate);\n    }, [state]);\n    return [state, BuyWorker, UpgradeWorker];\n}","import React, {useState, useEffect} from 'react';\nimport useVisible from \"../hooks/useVisible\";\nimport useWorker from \"../hooks/useWorker\";\n\n\nexport default function Worker({worker, money, setMoney, multiplier}) {\n    const [workerVisibility, visible, reveal] = useVisible();\n    const [workerState, BuyWorker, UpgradeWorker] = useWorker(worker, setMoney, money, multiplier);\n    const [affordable, setAffordable] = useState(false)\n    useEffect(() => {\n        if (worker.cost <= money) setAffordable(true); \n    }, [money])\n    return (\n        <div className={`worker ${affordable ? \"\" : \"unaffordable\"}`}\n            >\n            <h3 className=\"worker-name\">{workerState.name}</h3>\n             <div\n                ref={workerVisibility} \n                >\n                <img\n                    className=\"worker-image\" \n                    src={workerState.img} />\n                <h4>Owned: <span>{workerState.owned}</span></h4>\n                <h4>Cost: <span>{workerState.cost * multiplier}</span>$</h4>\n                <h4>Production Rate: <span>{workerState.productionRate}</span>$</h4>\n                <h4>Upgrade Cost: <span>{workerState.productionRateUpgradeCost}</span>$</h4>\n                <h4>Level: <span>{workerState.level}</span></h4>\n                <button onClick={() => BuyWorker()}>Buy <span>{multiplier}</span>?</button>\n                <button onClick={() => UpgradeWorker()}>Upgrade?</button>\n            </div>\n            <div>\n                <button \n                    tabIndex=\"0\"\n                    onClick={() => reveal()}\n                >\n                    {visible ? \"Hide?\" : \"Reveal?\"}\n                </button>\n            </div>\n        </div>\n    )\n}\n","import {useState, useRef, useEffect, useCallback} from \"react\";\n\nexport default function useVisible() {\n\n    const [visible, setVisible] = useState(true);\n\n    const reveal = useCallback(() => {\n        setVisible(prevVisible => !prevVisible)\n    }, [])\n    const element = useRef();\n    useEffect(() => {\n        if (visible) element.current.style.display = \"block\";\n        if (!visible) element.current.style.display = \"none\";\n        console.log(element)\n    }, [visible]);\n    return [element, visible, reveal];\n}","export default __webpack_public_path__ + \"static/media/drill.1a13da94.png\";","export default __webpack_public_path__ + \"static/media/worker.5a8cd7ac.png\";","export default __webpack_public_path__ + \"static/media/monky.16a653ef.png\";","import drillImg from \"./images/drill.png\";\nimport workerImg from \"./images/worker.png\";\nimport monkeyImg from \"./images/monky.png\";\nclass Worker {\n  constructor(\n    defaultCost,\n    defaultProductionRate, \n    defaultProductionRateUpgradeCost, \n    name,\n    img\n    ) {\n        \n      // storage keys\n      this.OWNED_LOCAL_STORAGE_KEY = `Coalminer.${name}Owned`;\n      this.COST_LOCAL_STORAGE_KEY = `Coalminer.${name}Cost`;\n      this.UPGRADE_CAP_LOCAL_STORAGE_KEY = `Coalminer.${name}CapLimit`;\n      this.CURRENT_PRODUCTION_RATE_LOCAL_STORAGE_KEY = `Coalminer.${name}CurrentProductionRate`;\n      this.CURRENT_PRODUCTION_RATE_UPGRADE_COST_LOCAL_STORAGE_KEY = `Coalminer.${name}CurrentProductionRateUpgradeCost`;\n      \n      this.name = name;\n      this.owned = JSON.parse(localStorage.getItem(this.OWNED_LOCAL_STORAGE_KEY)) || 0;\n      this.cost =  JSON.parse(localStorage.getItem(this.COST_LOCAL_STORAGE_KEY)) || defaultCost;\n      this.productionRate = JSON.parse(localStorage.getItem(this.CURRENT_PPRODUCTION_RATE_LOCAL_STORAGE_KEY)) || defaultProductionRate;\n      this.productionRateUpgradeCost = JSON.parse(localStorage.getItem(this.CURRENT_PRODUCTION_RATE_UPGRADE_COST_LOCAL_STORAGE_KEY)) || defaultProductionRateUpgradeCost;\n      this.level = 0;\n      this.img = img;\n      this.saveFiles = [\n        {\n          key: this.OWNED_LOCAL_STORAGE_KEY,\n          value: this.owned\n        },\n        {\n          key: this.COST_LOCAL_STORAGE_KEY,\n          value: this.cost\n        },\n        {\n          key: this.CURRENT_PRODUCTION_RATE_LOCAL_STORAGE_KEY,\n          value: this.productionRate\n        },\n        {\n          key: this.CURRENT_PRODUCTION_RATE_UPGRADE_COST_LOCAL_STORAGE_KEY,\n          value: this.productionRateUpgradeCost\n        }\n      ]\n    }\n    \n    save() {\n      this.saveFiles.forEach(save => {\n        localStorage.setItem(save.key, JSON.stringify(save.value))\n      })\n    }\n}\n\nconst miners = new Worker(10, 1, 100, \"Miners\", workerImg);\nconst drills = new Worker(100, 2, 1000, \"Drills\", drillImg);\nconst monkeyMiners = new Worker(150, 3, 1500, \"Monkey Miners\", monkeyImg)\nconst Workers = [miners, drills, monkeyMiners]\nexport default Workers;\n","import React from 'react';\nimport Worker from \"./Worker\";\nimport Workers from \"../misc\";\n\nexport default function WorkerList({ money, setMoney, multiplier}) {\n    return (\n        <section id=\"worker-list\">\n            {Workers.map((worker, index) => {\n                return <Worker \n                            worker={worker} \n                            money={money} \n                            setMoney={setMoney} \n                            multiplier={multiplier} \n                            key={index} \n                        />\n            })}\n        </section>\n    )\n}\n","import React from 'react'\n\nexport default function Multiplier({amount, setMultiplier}) {\n    return (\n        <label for={`${amount}-multiplier`}>{amount}x\n            <input\n                type=\"radio\"\n                value={amount}\n                id={`${amount}-multiplier`}\n                name=\"multiplier\"\n                onClick={() => {setMultiplier(amount)}}\n            ></input>\n        </label>\n    )\n}\n","import React from 'react'\nimport Multiplier from \"./Multiplier\";\n\nexport default function MultiplierList({setMultiplier}) {\n    return (\n        <section id=\"multiplierContainer\">\n            <fieldset>\n                <legend>Multipliers for buying in mass:</legend>\n                <Multiplier amount={1} setMultiplier={setMultiplier} key=\"1\" />\n                <Multiplier amount={10} setMultiplier={setMultiplier} key=\"10\" />\n                <Multiplier amount={100} setMultiplier={setMultiplier} key=\"100\" />\n            </fieldset>\n        </section>\n    )\n}\n","import React, { useEffect, useState } from \"react\";\nimport WorkerList from \"./components/WorkerList\";\n\nimport \"./css/App.css\";\nimport MultiplierList from \"./components/MultiplierList\";\n\nfunction App() {\n  const [money, setMoney] = useState(10\n    // JSON.parse(localStorage.getItem(\"CoalMiner.money\")) || 10\n  );\n  const [multiplier, setMultiplier] = useState(1);\n  useEffect(() => {\n    localStorage.setItem(\"GoldMiner.money\", JSON.stringify(money))\n  }, [money])\n  return (\n    <main>\n      <h2>Current Money: {money}</h2>\n      <WorkerList money={money} setMoney={setMoney} multiplier={multiplier} />\n      <MultiplierList setMultiplier={setMultiplier} />\n    </main>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}